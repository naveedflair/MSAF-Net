# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rDV1EceVBQpoacWnWM3LKJkYH9Rq5Qwz
"""

import torch
from torch.utils.data import DataLoader, random_split

def get_data_loaders(dataset, batch_size=8, train_ratio=0.8, val_ratio=0.1, test_ratio=0.1):
    train_size = int(train_ratio * len(dataset))
    val_size = int(val_ratio * len(dataset))
    test_size = len(dataset) - train_size - val_size

    train_dataset, val_dataset, test_dataset = random_split(
        dataset, [train_size, val_size, test_size]
    )

    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
    val_loader = DataLoader(val_dataset, batch_size=batch_size, shuffle=False)
    test_loader = DataLoader(test_dataset, batch_size=batch_size, shuffle=False)

    print(f"Number of training samples: {len(train_dataset)}")
    print(f"Number of validation samples: {len(val_dataset)}")
    print(f"Number of testing samples: {len(test_dataset)}")

    return train_loader, val_loader, test_loader

def get_fixed_test_images(loader, num_images=10):
    images_list = []
    masks_list = []
    with torch.no_grad():
        for images, masks in loader:
            images_list.extend(images.cpu().numpy())
            masks_list.extend(masks.cpu().numpy())
            if len(images_list) >= num_images:
                break
    return images_list[:num_images], masks_list[:num_images]